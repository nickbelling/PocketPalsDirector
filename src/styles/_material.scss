@use '@angular/material' as mat;

@mixin all-material() {
    html {
        @include mat.theme(
            (
                color: (
                    theme-type: light,
                    primary: mat.$azure-palette,
                    tertiary: mat.$orange-palette,
                ),
                typography: Roboto,
                density: 0,
            )
        );

        @include _cdk();

        @include _button();
        @include _card();
        @include _dialog();
        @include _expansion-panel();
        @include _list();
        @include _toolbar();
    }
}

@mixin _cdk() {
    .cdk-drag-preview {
        outline-color: var(--mat-sys-outline);
        outline-width: 1px;
        outline-style: solid;
    }

    .cdk-drag-handle {
        cursor: move;
    }

    .cdk-placeholder {
        background-color: var(--mat-sys-surface-dim);
        border-style: dotted;
        border-width: 3px;
        border-color: var(--mat-sys-outline-variant);
        transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
    }
}

@mixin _button() {
    @include mat.button-overrides(
        (
            filled-container-shape: var(--rounding),
            outlined-container-shape: var(--rounding),
            protected-container-shape: var(--rounding),
            text-container-shape: var(--rounding),
        )
    );

    .error {
        &:not(:disabled) {
            mat-icon {
                color: var(--mat-sys-on-error);
            }
        }

        @include mat.button-overrides(
            (
                filled-container-color: var(--mat-sys-error),
                filled-label-text-color: var(--mat-sys-on-error),
                text-label-text-color: var(--mat-sys-on-error),
                text-disabled-label-text-color: var(--mat-sys-on-surface),
            )
        );

        @include mat.fab-overrides(
            (
                container-color: var(--mat-sys-error),
                small-container-color: var(--mat-sys-error),
                foreground-color: var(--mat-sys-on-error),
            )
        );
    }
}

@mixin _card() {
}

@mixin _dialog() {
    @include mat.dialog-overrides(
        (
            container-shape: var(--rounding),
        )
    );

    mat-dialog-content {
        min-width: 400px;
    }
}

@mixin _expansion-panel() {
    mat-expansion-panel-header {
        text-wrap-mode: nowrap;

        mat-panel-title {
            display: block !important;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        mat-panel-description {
            font-weight: 400;
            display: block !important;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
}

@mixin _list() {
    .mat-mdc-list-item-meta {
        height: 100%;
        align-content: center;
    }

    @include mat.list-overrides(
        (
            list-item-container-color: var(--mat-sys-surface),
        )
    );
}

@mixin _toolbar() {
    @include mat.toolbar-overrides(
        (
            container-background-color: var(--mat-sys-primary-fixed-dim),
            container-text-color: var(--mat-sys-on-primary-fixed-dim),
        )
    );

    mat-toolbar {
        flex-shrink: 0;

        @include mat.icon-button-overrides(
            (
                icon-color: var(--mat-sys-on-primary),
            )
        );
    }
}
