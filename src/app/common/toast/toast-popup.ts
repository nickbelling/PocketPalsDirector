import { CommonModule } from '@angular/common';
import { Component, inject, linkedSignal, signal } from '@angular/core';
import { MatCardModule } from '@angular/material/card';
import { MatIconModule } from '@angular/material/icon';
import {
    MAT_SNACK_BAR_DATA,
    MatSnackBar,
    MatSnackBarModule,
} from '@angular/material/snack-bar';

export type ToastType = 'info' | 'error';

export interface ToastPopupData {
    /** The type (info/error) of the message, which informs its icon and color. */
    type: ToastType;

    /** The text of the popup. */
    message: string;

    /** (Optional) Allows overriding the Material Symbols icon in the popup. */
    icon?: string;
}

/**
 * The component displayed in a Toast notification generated by the ToastService.
 * Do not instantiate directly.
 */
@Component({
    imports: [CommonModule, MatCardModule, MatIconModule, MatSnackBarModule],
    templateUrl: './toast-popup.html',
})
export class ToastPopup {
    private _snackbar = inject(MatSnackBar);
    private _data = inject<ToastPopupData>(MAT_SNACK_BAR_DATA);

    /** The type of the popup. Used to set the CSS class that defines its color. */
    public type = signal<ToastType>('info');

    /** The message to be displayed. */
    public message = signal<string>('');

    /** The icon to be displayed next to the message. */
    public icon = linkedSignal<string>(() => {
        if (this._data.icon) {
            return this._data.icon;
        }

        switch (this.type()) {
            case 'info':
                return 'info';
            case 'error':
                return 'report';
        }
    });

    constructor() {
        this.type.set(this._data.type);
        this.message.set(this._data.message);
        if (this._data.icon) {
            this.icon.set(this._data.icon);
        }
    }

    /**
     * Dismisses the snackbar displaying this component when the user clicks it.
     */
    public dismiss(): void {
        this._snackbar.dismiss();
    }
}
